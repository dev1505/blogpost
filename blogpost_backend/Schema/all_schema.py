from typing import Optional, List
from datetime import datetime, timezone, date
from pydantic import BaseModel


class User_Serializer(BaseModel):
    username: Optional[str] = None
    password: str
    email: str
    user_cost: int = 0
    registration_time: str = str(datetime.now(timezone.utc).time())


class Token_Serializer(BaseModel):
    access_token: str
    refresh_token: str


class Blog_Create(BaseModel):
    username: Optional[str] = None
    title: str
    hashtags: str
    content: str
    generated_by_ai: bool = False
    post_time: str = str(datetime.now(timezone.utc).time())
    post_date: str = str(date.today())


class Blog_Generate(BaseModel):
    username: Optional[str]
    title: str
    hashtags: str


class List_Blogs(BaseModel):
    data: List[Blog_Create]


"""
{'properties': {'title': {'title': 'Title', 'type': 'string'}, 'hashtags': {'title': 'Hashtags', 'type': 'string'}, 'content': {'title': 'Content', 'type': 'string'}, 'generated_by_ai': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'default': False, 'title': 'Generated By Ai'}, 'post_time': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': '05:52:43.422238', 'title': 'Post Time'}, 'post_date': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': '2025-10-15', 'title': 'Post Date'}}, 'required': ['title', 'hashtags', 'content'], 'title': 'Blog_Create', 'type': 'object'}
"""
